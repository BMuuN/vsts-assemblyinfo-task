Compile:                                                            tsc
Run Task:                                                           nodenode index.js
Build & Test:                                                       npm test

To generate/update third party notice file run:                     node generate-third-party-notice.js



ExtensionId			-->		NetFrameworkExtensionId				-->			NetFrameworkTaskName
ExtensionName		-->		NetFrameworkExtensionName			-->			NetFrameworkTaskFriendlyName
TaskId				-->		NetFrameworkTaskId



TODO
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- If the word "Attribute" is post fixed on the assembly info attribute then the transform fails
    e.g. [assembly: AssemblyTitleAttribute("")] will not get rplaces

- !!! CHECK THE OUTPUT VARIABLES ARE CORRECT !!!
- !!! CHECK THE FILE ENCODING & BOM ARE SAVING CORRECTLY !!!

- Implement unit test
- Run tests on build
- Add NuSpec task with specific inputs for NuSpec files.





NOTES
------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Additional Output Variables
----------------------------
Previously: 
    AssemblyInfo.Version
    AssemblyInfo.FileVersion
    AssemblyInfo.InformationalVersion

Now:
    AssemblyInfo.Version
    AssemblyInfo.FileVersion
    AssemblyInfo.InformationalVersion
    AssemblyInfo.PackageVersion


Dates
----------------------------
Format of Dates have changed.  We're now using the monent js library and the following format should be adhered too:
https://momentjs.com/docs/#year-month-and-day-tokens

For example, if the following format was originally used:

    "Copyright © $(date:yyyy) $(date:dd.MM.yyyy dd MMMM yyyy HH:mm tt) Example Ltd";

then the new format utalising moment js will need to adhere to the followign structure:

    "Copyright © $(date:YYYY) $(date:DD.MM.YYYY DD MMMM YYYY HH:mm a) Example Ltd";


Version Numbers
----------------------------
Now supports * wildcards for build & revision Numbers: 2018.11.*.*

List possible ways to specify version numbers:
1.0.$(Build.BuildId)
$(Build.BuildNumber) which is specified as $(Build.DefinitionName)_$(date:yyyy).$(date:MM).$(date:dd)$(rev:.r)

This is already covered: https://github.com/BMuuN/vsts-assemblyinfo-task/wiki/Versioning

would be better to give examples how it's used within the application & show results on DLL
