Compile:                                                            tsc
Run Task:                                                           nodenode index.js
Build & Test:                                                       npm test

To generate/update third party notice file run:                     node generate-third-party-notice.js



ExtensionId			-->		NetFrameworkExtensionId				-->			NetFrameworkTaskName
ExtensionName		-->		NetFrameworkExtensionName			-->			NetFrameworkTaskFriendlyName
TaskId				-->		NetFrameworkTaskId



TODO
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- !!! CHECK THE OUTPUT VARIABLES ARE CORRECT !!!
- !!! CHECK THE FILE ENCODING & BOM ARE SAVING CORRECTLY !!!
- Update the NPM packages
- Replace teh old VSTS task with the new Azure DevOps Pipeline task.

- Insert if missing doesn't work 100% : - if the attribute exists but is commented out the attribute is not added.

- Implement unit test
- Run tests on build
- Add NuSpec task with specific inputs for NuSpec files.





WIKI
------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Additional Output Variables
----------------------------
Previously: 
    AssemblyInfo.Version
    AssemblyInfo.FileVersion
    AssemblyInfo.InformationalVersion

Now:
    AssemblyInfo.Version
    AssemblyInfo.FileVersion
    AssemblyInfo.InformationalVersion
    AssemblyInfo.PackageVersion


Dates
----------------------------
Format of Dates have changed.  We're now using the monent js library and the following format should be adhered too:
https://momentjs.com/docs/#year-month-and-day-tokens

For example, if the following format was originally used:

    "Copyright © $(date:yyyy) $(date:dd.MM.yyyy dd MMMM yyyy HH:mm tt) Example Ltd";

then the new format utalising moment js will need to adhere to the followign structure:

    "Copyright © $(date:YYYY) $(date:DD.MM.YYYY DD MMMM YYYY HH:mm a) Example Ltd";


Version Numbers
----------------------------
Now supports * wildcards for build & revision Numbers: 2018.11.*.*

List possible ways to specify version numbers:
1.0.$(Build.BuildId)
$(Build.BuildNumber) which is specified as $(Build.DefinitionName)_$(date:yyyy).$(date:MM).$(date:dd)$(rev:.r)

This is already covered: https://github.com/BMuuN/vsts-assemblyinfo-task/wiki/Versioning

would be better to give examples how it's used within the application & show results on DLL


Add tasks.json
----------------------------
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build TypeScript",
            "command": "tsc",
            "type": "shell",
            "args": [
                "-p",
                "."
            ],
            "presentation": {
                "reveal": "never"
            },
            "problemMatcher": "$tsc"
        },
        {
            "type": "typescript",
            "tsconfig": "tsconfig.json",
            "problemMatcher": [
                "$tsc"
            ]
        }
    ]
}


Add launch.json
- See here for recipies:  https://github.com/Microsoft/vscode-recipes/tree/master/debugging-mocha-tests
----------------------------
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Net Framework",
            "protocol": "inspector",
            "envFile": "${workspaceFolder}/.env",
            "args": [ "./src/NetFramework/index.ts" ],
            "cwd": "${workspaceRoot}",
            "runtimeArgs": [ "-r", "ts-node/register" ],
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Net Core",
            "protocol": "inspector",
            "envFile": "${workspaceFolder}/.env",
            "args": [ "./src/NetCore/index.ts" ],
            "cwd": "${workspaceRoot}",
            "runtimeArgs": [ "-r", "ts-node/register" ],
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Current File",
            "protocol": "inspector",
            "envFile": "${workspaceFolder}/.env",
            "args": [ "${relativeFile}" ],
            "cwd": "${workspaceRoot}",
            "runtimeArgs": [ "-r", "ts-node/register" ],
            "sourceMaps": true,
            "internalConsoleOptions": "openOnSessionStart"
        }
    ]
}